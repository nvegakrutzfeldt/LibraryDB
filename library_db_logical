
Logical Design:

CREATE TABLE BOOKS
( BOOK_ISBN INT NOT NULL PRIMARY KEY UNIQUE,
 BOOK_TITLE VARCHAR(50),
 BOOK_GENRE VARCHAR(30), 
 BOOK_DESCRIPTION VARCHAR(100),
 BOOK_AVAILABLE_QUANTITY INT, 
CALL_NUMBER VARCHAR(30),
 PUBLISHER_ID INT,
 CONSTRAINT BOOKS_FK_PUBLISHER_ID FOREIGN KEY ( PUBLISHER_ID) REFERENCES  PUBLISHER(PUBLISHER_ID)
 );


CREATE TABLE PUBLISHER
(PUBLISHER_ID INT NOT NULL PRIMARY KEY UNIQUE, 
 PUBLISHER_NAME VARCHAR(30)
 );


CREATE TABLE AUTHOR
(AUTHOR_ID INTEGER NOT NULL PRIMARY KEY UNIQUE,
 AUTHOR_NAME VARCHAR(15)
 );


CREATE TABLE JOURNAL
 ( JOURNAL_ID INT NOT NULL PRIMARY KEY UNIQUE,
 JOURNAL_NAME VARCHAR(100),
 JOURNAL_DESCRIPTION VARCHAR(256)
 );


CREATE TABLE BOOK_AUTHOR
(AUTHOR_ID INTEGER NOT NULL,
BOOK_ISBN INT NOT NULL,
PRIMARY KEY (AUTHOR_ID, BOOK_ISBN),
CONSTRAINT BOOK_AUTHOR_FK_BOOK_ISBN FOREIGN KEY(BOOK_ISBN) REFERENCES BOOKS(BOOK_ISBN),
CONSTRAINT BOOK_AUTHOR_FK_AUTHOR_ID FOREIGN KEY (AUTHOR_ID) REFERENCES AUTHOR(AUTHOR_ID)
 );


CREATE TABLE ARTICLE
( ARTICLE_ID INTEGER NOT NULL UNIQUE PRIMARY KEY,
ARTICLE_TITLE VARCHAR(100),
ARTICLE_EDITION INT,
ARTICLE_CATEGORY VARCHAR(30),
PUBLISHER_ID INT,
JOURNAL_ID INT, 
CONSTRAINT ARTICLE_FK_PUBLISHER_ID FOREIGN KEY (PUBLISHER_ID ) REFERENCES PUBLISHER(PUBLISHER_ID ),
CONSTRAINT ARTICLE_FK_JOURNAL_ID FOREIGN KEY (JOURNAL_ID) REFERENCES JOURNAL(JOURNAL_ID)
);




CREATE TABLE ARTICLE_AUTHOR
(AUTHOR_ID INTEGER NOT NULL,
ARTICLE_ID INTEGER NOT NULL,
PRIMARY KEY (AUTHOR_ID, ARTICLE_ID ),
CONSTRAINT ARTICLE_AUTHOR_FK_ARTICLE_ID FOREIGN KEY (ARTICLE_ID) REFERENCES ARTICLE(ARTICLE_ID),
CONSTRAINT ARTICLE_AUTHOR_FK_AUTHOR_ID FOREIGN KEY (AUTHOR_ID) REFERENCES AUTHOR(AUTHOR_ID)
 );


 CREATE TABLE USERS
 (USER_ID INTEGER NOT NULL PRIMARY KEY UNIQUE,
 USER_NAME VARCHAR(30),
 USER_PHONE_NUMBER INTEGER,
 USER_EMAIL VARCHAR(50),
 USER_PASSWORD VARCHAR(20),
 USER_TYPE VARCHAR(20),
 USER_ADDRESS VARCHAR(50),
 USER_CITY VARCHAR(20),
 USER_STATE VARCHAR(20),
 USER_ZIP INTEGER
 );


CREATE TABLE BORROWED_BOOKS
(BORROW_ID INTEGER NOT NULL PRIMARY KEY UNIQUE,
 BORROW_DATE date, 
 RETURN_DATE date, 
 LATE_FINE INT, 
 USER_ID INTEGER,
 BOOK_ISBN INT,
 CONSTRAINT BORROWED_BOOKS_FK_USER_ID FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID),
 CONSTRAINT BORROWED_BOOKS_FK_BOOK_ISBN FOREIGN KEY (BOOK_ISBN) REFERENCES BOOKS(BOOK_ISBN)
 );







